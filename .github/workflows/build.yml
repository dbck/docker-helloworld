name: Build image

on:
  push:
    branches:
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch

jobs:
  build:
    name: Build docker image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Builder instance name
      run: echo ${{ steps.buildx.outputs.name }}

    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Prepare tag name
      run: |
        export TAG=$(date +%Y%m%d-%H%M%S)
        echo "TAG=${TAG}" >> $GITHUB_ENV

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        builder: ${{ steps.buildx.outputs.name }}
        platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
        context: build/
        file: build/Dockerfile
        build-args: |
            IMAGE_NAMESPACE=dbck
            IMAGE_NAME=helloworld
            FROM_IMAGE=debian:10.7
        push: ${{ github.event_name != 'pull_request' }}
        tags: dbck/helloworld:${{ env.TAG }},dbck/helloworld:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}